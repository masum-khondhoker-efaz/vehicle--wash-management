"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRouters = void 0;
const express_1 = __importDefault(require("express"));
const auth_1 = __importDefault(require("../../middlewares/auth"));
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const user_controller_1 = require("../user/user.controller");
const user_validation_1 = require("../user/user.validation");
const client_1 = require("@prisma/client");
const router = express_1.default.Router();
router.post('/register', (0, validateRequest_1.default)(user_validation_1.UserValidations.registerUser), user_controller_1.UserControllers.registerUser);
router.get('/', (0, auth_1.default)(client_1.UserRoleEnum.SUPER_ADMIN, client_1.UserRoleEnum.ADMIN), user_controller_1.UserControllers.getAllUsers);
router.get('/me', (0, auth_1.default)(), user_controller_1.UserControllers.getMyProfile);
router.get('/:id', (0, auth_1.default)('ADMIN', 'SUPER_ADMIN'), user_controller_1.UserControllers.getUserDetails);
router.put('/update-profile', (0, auth_1.default)(), user_controller_1.UserControllers.updateMyProfile);
router.put('/update-user/:id', (0, validateRequest_1.default)(user_validation_1.UserValidations.updateProfileSchema), (0, auth_1.default)(), user_controller_1.UserControllers.updateUserRoleStatus);
router.put('/change-password', (0, auth_1.default)(), user_controller_1.UserControllers.changePassword);
router.post('/forgot-password', (0, validateRequest_1.default)(user_validation_1.UserValidations.forgetPasswordSchema), user_controller_1.UserControllers.forgotPassword);
router.put('/verify-otp', (0, validateRequest_1.default)(user_validation_1.UserValidations.verifyOtpSchema), user_controller_1.UserControllers.verifyOtp);
router.put('/verify-otp-forgot-password', (0, validateRequest_1.default)(user_validation_1.UserValidations.verifyOtpSchema), user_controller_1.UserControllers.verifyOtpForgotPassword);
router.put('/update-password', user_controller_1.UserControllers.updatePassword);
exports.UserRouters = router;
