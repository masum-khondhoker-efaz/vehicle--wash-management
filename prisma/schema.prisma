// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  email           String         @unique
  password        String
  fullName        String
  phoneNumber     String
  profileImage    String?
  otp             Int?
  otpExpiresAt    DateTime?
  role            UserRoleEnum   @default(CUSTOMER)
  status          UserStatus     @default(ACTIVE)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  customer        Customer[]
  garageOwner     GarageOwner[]
  driver          Driver[]
  admin           Admin[]


  @@map("users")
}

model Admin {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  userId          String         @db.ObjectId
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  user            User           @relation(fields: [userId], references: [id])
  @@map("admins")
}

model Customer{
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  userId       String         @db.ObjectId
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  user         User           @relation(fields: [userId], references: [id])
  @@map("customers")
}

model GarageOwner {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  userId          String         @db.ObjectId
  description     String?
  location        String?
  latitude        Float?
  longitude       Float?
  services        String[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  user            User           @relation(fields: [userId], references: [id])
  @@map("garage_owners")
}


model Driver {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  userId          String         @db.ObjectId
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  user            User           @relation(fields: [userId], references: [id])
  @@map("drivers")
}




enum UserRoleEnum {
  CUSTOMER
  ADMIN
  SUPER_ADMIN
  GARAGE_OWNER
  DRIVER

}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}
